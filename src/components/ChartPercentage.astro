---
import Caption from "./Caption.astro";

const { title, notes, values } = Astro.props;
---

<div class="chart-percentage reveal--fadeInUp">
  <div class="chart-percentage__holder">

    <span class="chart-percentage__title reveal--fadeInUp">{title}</span>
    <div class="chart-percentage__bars">
      {
        values &&
          values.map((data, index) => (
            <div
              class="chart-percentage__bar"
              style={`--clr-chart:${data.color}; --data-perc:${data.number}%; --index:${index}`}
            />
          ))
      }
    </div>
    <div class="chart-percentage__captions">
      {
        values &&
          values.map((data, index) => (
            <div
              class="chart-percentage__caption"
              style={`--clr-chart:${data.color}; --index:${index}`}
            >
              <span class="chart-percentage__label">
                {data?.label ? data.label + " - " : ""}
                <strong>{data.number + "%"}</strong>
              </span>
            </div>
          ))
      }
    </div>
    <div class="chart-percentage__notes reveal--fadeInUp">
      <Caption>{notes}</Caption>
    </div>
  </div>
</div>

<style lang="scss">
  @use "../assets/styles/config/config" as *;
  @use "../assets/styles/globals/grrr" as *;

  :global(.animation-disabled:has(.chart-percentage) + *) {
    margin-top: var(--mt-m);
  }

  .chart-percentage {
    $self: &;
    &:not(:first-child),
    & :global(+ *),
    :global(.animation-disabled > ) & {
      margin-top: var(--mt-m);
    }

    :global(.group__content >) & {
      @extend %grrr--board;
    }

    &__holder {
      :global(.group__content > .chart-percentage) & {
        grid-column: content;
      }
    }

    &__title {
      @include type("h-m");
      display: block;
      margin-bottom: 40px;
    }

    &__bars {
      display: flex;
    }

    &__bar {
      flex-basis: 0;
      height: 100px;
      background-color: var(--clr-chart);
      transition: 1s ease .5s;

      :global(.animation-disabled) &,
      #{$self}.reveal & {
        flex-basis: var(--data-perc);
      }
    }

    &__captions {
      margin-top: 24px;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
      row-gap: 10px;
      column-gap: 32px;
    }

    &__caption {
      @include type("c-m");
      width: fit-content;
      display: grid;
      grid-template-columns: 16px auto;
      gap: 8px;
      opacity: 0;
      transform: translateY(30px);
      transition: 1s ease .5s;

      :global(.animation-disabled) &,
      #{$self}.reveal & {
        opacity: 1;
        transform: translateY(0);
      }

      &::before {
        content: "";
        width: 16px;
        height: 16px;
        display: inline-block;
        background-color: var(--clr-chart);
        margin-top: 1px;
        transform: translateY(2px);
      }
    }

    &__label {
      display: inline-block;
    }

    &__notes {
      margin-top: 40px;
    }
  }
</style>
